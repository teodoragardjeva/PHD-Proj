{"version":3,"sources":["services/sharedNavigationService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAUA;gBAMI,YAAoB,WAAuB;oBAAvB,gBAAW,GAAX,WAAW,CAAY;oBALpC,SAAI,GAAyC,IAAI,iCAAe,CAAC,IAAI,KAAK,EAAgB,CAAC,CAAC;oBAM/F,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,MAAW;wBAC7C,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;4BACV,MAAM,GAAG,EAAE,CAAC;wBAChB,CAAC;wBAED,IAAI,CAAC,YAAY,GAAG,iBAAO,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;wBAEtD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACvB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;oBACzB,CAAC,CAAC,CAAC;gBACP,CAAC;gBAEM,oBAAoB,CAAC,EAAU;oBAClC,IAAI,GAAG,GAAqB,EAAE,CAAC;oBAC/B,IAAI,IAAkB,CAAC;oBAEvB,OAAO,EAAE,GAAG,CAAC,EAAE,CAAC;wBACZ,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;wBAE7B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;4BACR,MAAM,CAAC;wBACX,CAAC;wBAED,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;wBAC7C,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;oBACvB,CAAC;oBAED,GAAG,CAAC,OAAO,EAAE,CAAC;oBAEd,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;gBACjC,CAAC;gBAEM,OAAO,CAAC,EAAU;oBACrB,MAAM,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;gBAC3G,CAAC;YACL,CAAC;YA3CD;gBAAC,iBAAU,EAAE;;uCAAA;YACb,6DA0CC,CAAA","file":"services/sharedNavigationService.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {WebService} from './webService';\r\nimport {MenuListItem} from '../models/menuListItem';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\r\nimport {Helpers} from '../helpers/helpers';\r\nimport {NavigationItem } from '../models/navigationItem';\r\n\r\n\r\n@Injectable()\r\nexport class SharedNavigationService {\r\n    public data: BehaviorSubject<Array<MenuListItem>> = new BehaviorSubject(new Array<MenuListItem>());\r\n    public selectedMenuItem: MenuListItem;\r\n    private kvpMenuItems: { [id: number]: MenuListItem }\r\n    public navigationHistory: NavigationItem[];\r\n\r\n    constructor(private _webService: WebService) {\r\n        this._webService.getMenuItems().then((result: any) => {\r\n            if (!result) {\r\n                result = [];\r\n            }\r\n\r\n            this.kvpMenuItems = Helpers.getNavigationTree(result);\r\n\r\n            this.data.next(result);\r\n            this.data.complete();\r\n        });\r\n    }\r\n\r\n    public selectNavigationMenu(id: number) {\r\n        let arr: NavigationItem[] = [];\r\n        let item: MenuListItem;\r\n\r\n        while (id > 0) {\r\n            item = this.kvpMenuItems[id];\r\n\r\n            if (!item) {\r\n                return;\r\n            }\r\n\r\n            arr.push({ id: item.id, title: item.title });\r\n            id = item.parentId;\r\n        }\r\n\r\n        arr.reverse();\r\n\r\n        this.navigationHistory = arr;\r\n    }\r\n\r\n    public getItem(id: number): MenuListItem {\r\n        return !id || isNaN(id) || !this.kvpMenuItems || !this.kvpMenuItems[id] ? null : this.kvpMenuItems[id];\r\n    }\r\n}"],"sourceRoot":"/source/"}