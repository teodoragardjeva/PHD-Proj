{"version":3,"sources":["components/menuComponent.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,uBAAsD,eAAe,CAAC,CAAA;AAGtE,6BAAyB,wBAAwB,CAAC,CAAA;AAClD,0CAAsC,qCAAqC,CAAC,CAAA;AAM5E,0BAA6B,oBAAoB,CAAC,CAAA;AAClD,kCAA6B,0BAA0B,CAAC,CAAA;AAoBxD;IAMI,YAAoB,WAAuB,EAAU,wBAAiD;QAAlF,gBAAW,GAAX,WAAW,CAAY;QAAU,6BAAwB,GAAxB,wBAAwB,CAAyB;QAFtG,YAAO,GAAW,wBAAc,CAAC,UAAU,GAAG,gBAAgB,CAAC;IAI/D,CAAC;IACD,QAAQ;QACJ,IAAI,YAAY,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,SAAS,CAC3D,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,EACjB,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,EACjB;YACI,IAAI,MAAM,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC3D,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACV,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;gBACjB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACzB,CAAC;YAED,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAA,CAAA,CAAC,CAAC,CAAC;YAC7E,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,IAAI,OAAO,IAAI,CAAC,eAAe,KAAK,WAAW,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,gCAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC;YACzM,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,IAAI,OAAO,IAAI,CAAC,eAAe,KAAK,WAAW,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,gCAAc,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC;QACpN,CAAC,CACJ,CAAC;IAEN,CAAC;AACL,CAAC;AA3CD;IAAC,gBAAS,CAAC;QACP,QAAQ,EAAE,WAAW;QACrB,WAAW,EAAE,oCAAoC;QACjD,SAAS,EAAE,CAAC,uBAAU,CAAC;QACvB,IAAI,EAAE;YACF,mBAAmB,EAAE,MAAM;SAC9B;QACD,UAAU,EAAE;YACR,cAAO,CAAC,gBAAgB,EAAE;gBACtB,iBAAU,CAAC,WAAW,EAAE,cAAO,CAAC,eAAe,CAAC,CAAC;gBACjD,iBAAU,CAAC,WAAW,EAAE,cAAO,CAAC,gBAAgB,CAAC,CAAC,CAAE,gBAAgB;aACvE,CAAC;SACL;KACJ,CAAC;;iBAAA;AAEW,qBAAa,gBA4BzB,CAAA","file":"components/menuComponent.js","sourcesContent":["import {Component, trigger, transition, animate} from '@angular/core';\r\nimport {TreeView} from './treeView';\r\nimport {MenuListItem} from '../models/menuListItem';\r\nimport {WebService} from '../services/webService';\r\nimport {SharedNavigationService} from '../services/sharedNavigationService';\r\nimport {OnInit} from '@angular/core';\r\nimport {GridElement} from './grid';\r\nimport {UserProfile} from './userProfile';\r\nimport {FormsElement} from './forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {Configurations} from '../helpers/globals';\r\nimport {NavigationType} from '../enums/navigationTypes';\r\n\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'main-menu',\r\n    templateUrl: \"../../views/navigationSidebar.html\",\r\n    providers: [WebService],\r\n    host: {\r\n        '[@routeAnimation]': \"true\"\r\n    },\r\n    animations: [\r\n        trigger('routeAnimation', [\r\n            transition('* => void', animate('100ms ease-in')),\r\n            transition('void => *', animate('100ms ease-out'))  // For next page\r\n        ])\r\n    ]\r\n})\r\n    \r\nexport class MenuComponent implements OnInit {\r\n    items: MenuListItem[];\r\n    recent: MenuListItem[];\r\n    favourites: MenuListItem[];\r\n    iconUrl: string = Configurations.serviceUrl + 'elements/icon/';\r\n\r\n    constructor(private _webService: WebService, private _sharedNavigationService: SharedNavigationService) {\r\n\r\n    }\r\n    ngOnInit() {\r\n        let subscription = this._sharedNavigationService.data.subscribe(\r\n            value => void (0),\r\n            error => void (0),\r\n            () => {\r\n                let result = this._sharedNavigationService.data.getValue();\r\n                if (!result) {\r\n                    this.items = [];\r\n                    this.recent = [];\r\n                    this.favourites = [];\r\n                }\r\n\r\n                this.items = result.filter(function (item) { return item && !item.parentId});\r\n                this.recent = result.filter(function (item) { return item && item.navigationTypes !== null && typeof item.navigationTypes !== 'undefined' && item.navigationTypes.indexOf(NavigationType.Recent) > -1 });\r\n                this.favourites = result.filter(function (item) { return item && item.navigationTypes !== null && typeof item.navigationTypes !== 'undefined' && item.navigationTypes.indexOf(NavigationType.Favourite) > -1 });\r\n            }\r\n        );\r\n        \r\n    }\r\n}"],"sourceRoot":"/source/"}