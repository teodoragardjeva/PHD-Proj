{"version":3,"sources":["components/list.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,6BAAyB,wBAAwB,CAAC,CAAA;AAClD,uBAAqF,eAAe,CAAC,CAAA;AACrG,yBAAuC,iBAAiB,CAAC,CAAA;AAGzD,kCAA8B,sBAAsB,CAAC,CAAA;AAkBrD;IAOI,YAAoB,WAAuB,EAC/B,KAAqB,EACrB,MAAc;QAFN,gBAAW,GAAX,WAAW,CAAY;QAC/B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QALnB,eAAU,GAAmC,IAAI,iCAAe,CAAC,IAAI,KAAK,EAAU,CAAC,CAAC;IAO7F,CAAC;IAED,WAAW,CAAC,MAAM;QACd,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,MAAgB;YAC9F,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI;aAC9B,SAAS,CAAC,CAAC,MAAW;YACnB,8EAA8E;YAC9E,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC;QAC/B,CAAC,CAAC,CAAC;IACX,CAAC;IAED,WAAW;QACP,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IACpC,CAAC;AACL,CAAC;AA7CD;IAAC,gBAAS,CAAC;QACP,QAAQ,EAAE,SAAS;QACnB,WAAW,EAAE,2BAA2B;QACxC,IAAI,EAAE;YACF,mBAAmB,EAAE,MAAM;SAC9B;QACD,UAAU,EAAE;YACR,cAAO,CAAC,gBAAgB,EAAE;gBACtB,iBAAU,CAAC,WAAW,EAAE,cAAO,CAAC,eAAe,CAAC,CAAC;gBACjD,iBAAU,CAAC,WAAW,EAAE,cAAO,CAAC,gBAAgB,CAAC,CAAC,CAAE,gBAAgB;aACvE,CAAC;SACL;KACJ,CAAC;IAED,iBAAU,EAAE;;eAAA;AACA,mBAAW,cA8BvB,CAAA","file":"components/list.js","sourcesContent":["import {WebService} from '../services/webService';\r\nimport {Component, Injectable, OnInit, OnDestroy, trigger, transition, animate} from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\r\nimport {GridConfiguration} from '../models/gridConfiguration';\r\n\r\n@Component({\r\n    selector: 'list-ui',\r\n    templateUrl: '../../views/listView.html',\r\n    host: {\r\n        '[@routeAnimation]': \"true\"\r\n    },\r\n    animations: [\r\n        trigger('routeAnimation', [\r\n            transition('* => void', animate('100ms ease-in')),\r\n            transition('void => *', animate('100ms ease-out'))  // For next page\r\n        ])\r\n    ]\r\n})\r\n\r\n@Injectable()\r\nexport class ListElement implements OnInit, OnDestroy {\r\n    config: GridConfiguration;\r\n    private subscription: Subscription;\r\n    search: string;\r\n    public collection: BehaviorSubject<Array<Object>> = new BehaviorSubject(new Array<Object>());\r\n\r\n\r\n    constructor(private _webService: WebService,\r\n        private route: ActivatedRoute,\r\n        private router: Router) {\r\n\r\n    }\r\n\r\n    searchItems(newVal) {\r\n        this._webService.getItems(+this.route.snapshot.params['type'], this.search).then((result: Object[]) => {\r\n            this.collection.next(result);\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.subscription = this.route.data\r\n            .subscribe((result: any) => {//according to router definition  resolve: { items: ListResolver }\r\n                //the result is {items:dataFromWS}, the structure is set in the resolve object\r\n                this.config = result.items;\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n}"],"sourceRoot":"/source/"}