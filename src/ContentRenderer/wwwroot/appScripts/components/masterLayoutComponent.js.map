{"version":3,"sources":["components/masterLayoutComponent.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,uBAA2C,eAAe,CAAC,CAAA;AAE3D,0CAAsC,qCAAqC,CAAC,CAAA;AAC5E,yBAAwF,iBAAiB,CAAC,CAAA;AAO1G;IAGI,YAAmB,wBAAiD,EAAU,MAAc,EAAU,KAAqB;QAAxG,6BAAwB,GAAxB,wBAAwB,CAAyB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QAEvH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,SAAS,CAC5D,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,EACjB,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,EACjB;YACI,IAAI,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YAEtG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAsB;gBACzC,EAAE,CAAC,CAAC,KAAK,YAAY,sBAAa,CAAC,CAAC,CAAC;oBACjC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;wBACzB,IAAI,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;oBAC7D,CAAC;oBACD,IAAI,CAAC,CAAC;wBACF,IAAI,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;oBACrH,CAAC;gBACL,CAAC;YACL,CAAC,CAAC,CAAC;QAEP,CAAC,CACJ,CAAC;IACN,CAAC;IAED,QAAQ;IAER,CAAC;IAED,WAAW;QACP,uCAAuC;QACvC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IACpC,CAAC;AAEL,CAAC;AAxCD;IAAC,gBAAS,CAAC;QACP,QAAQ,EAAE,WAAW;QACrB,WAAW,EAAE,+BAA+B;KAC/C,CAAC;;yBAAA;AAEW,6BAAqB,wBAmCjC,CAAA","file":"components/masterLayoutComponent.js","sourcesContent":["import {Component, OnInit, OnDestroy} from '@angular/core';\r\nimport {Subscription } from 'rxjs';\r\nimport {SharedNavigationService} from '../services/sharedNavigationService';\r\nimport { Router, ActivatedRoute, NavigationEnd, Params, Event as NavigationEvent } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'main-view',\r\n    templateUrl: \"../../views/masterLayout.html\",\r\n})\r\n\r\nexport class MasterLayoutComponent implements OnInit, OnDestroy{\r\n    private subscription: Subscription;\r\n\r\n    constructor(public _sharedNavigationService: SharedNavigationService, private router: Router, private route: ActivatedRoute) {\r\n        \r\n        this.subscription = this._sharedNavigationService.data.subscribe(\r\n            value => void (0),\r\n            error => void (0),\r\n            () => {\r\n                this._sharedNavigationService.selectNavigationMenu(parseInt(this.route.snapshot.params['navId'], 10));\r\n\r\n                router.events.forEach((event: NavigationEvent) => {\r\n                    if (event instanceof NavigationEnd) {\r\n                        if (!this.route.firstChild) {\r\n                            this._sharedNavigationService.selectNavigationMenu(null);\r\n                        }\r\n                        else {\r\n                            this._sharedNavigationService.selectNavigationMenu(parseInt(this.route.firstChild.snapshot.params['navId'], 10));\r\n                        }\r\n                    }\r\n                });\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    ngOnInit() {\r\n     \r\n    }\r\n\r\n    ngOnDestroy() {\r\n        // prevent memory leak by unsubscribing\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n}"],"sourceRoot":"/source/"}