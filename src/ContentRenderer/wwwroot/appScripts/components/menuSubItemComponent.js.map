{"version":3,"sources":["components/menuSubItemComponent.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAqBA;gBAKI,YAAmB,wBAAiD,EACxD,KAAqB,EACrB,MAAc;oBAFP,6BAAwB,GAAxB,wBAAwB,CAAyB;oBACxD,UAAK,GAAL,KAAK,CAAgB;oBACrB,WAAM,GAAN,MAAM,CAAQ;oBAL1B,YAAO,GAAW,wBAAc,CAAC,UAAU,GAAG,gBAAgB,CAAC;gBAM/D,CAAC;gBAED,QAAQ;oBACJ,IAAI,YAAY,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,SAAS,CAC3D,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,EACjB,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,EACjB;wBACI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;oBACzG,CAAC,CACJ,CAAC;gBAEN,CAAC;YACL,CAAC;YAlCD;gBAAC,gBAAS,CAAC;oBACP,QAAQ,EAAE,eAAe;oBACzB,WAAW,EAAE,kCAAkC;oBAC/C,IAAI,EAAE;wBACF,mBAAmB,EAAE,MAAM;qBAC9B;oBACD,UAAU,EAAE;wBACR,cAAO,CAAC,gBAAgB,EAAE;4BACtB,iBAAU,CAAC,WAAW,EAAE,cAAO,CAAC,eAAe,CAAC,CAAC;4BACjD,iBAAU,CAAC,WAAW,EAAE,cAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,gBAAgB;yBACtE,CAAC;qBACL;iBACJ,CAAC;;oCAAA;YAEF,uDAoBC,CAAA","file":"components/menuSubItemComponent.js","sourcesContent":["import {Component, trigger, transition, animate} from '@angular/core';\r\nimport {SharedNavigationService} from '../services/sharedNavigationService';\r\nimport {MenuListItem} from '../models/menuListItem';\r\nimport {OnInit} from '@angular/core';\r\nimport {Configurations} from '../helpers/globals';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'menu-sub-item',\r\n    templateUrl: \"../../views/menuSubItemView.html\",\r\n    host: {\r\n        '[@routeAnimation]': \"true\"\r\n    },\r\n    animations: [\r\n        trigger('routeAnimation', [\r\n            transition('* => void', animate('100ms ease-in')),\r\n            transition('void => *', animate('100ms ease-out')) // For next page\r\n        ])\r\n    ]\r\n})\r\n\r\nexport class MenuSubItemComponent implements OnInit {\r\n    public item: MenuListItem;\r\n    iconUrl: string = Configurations.serviceUrl + 'elements/icon/';\r\n\r\n\r\n    constructor(public _sharedNavigationService: SharedNavigationService,\r\n        private route: ActivatedRoute,\r\n        private router: Router) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        let subscription = this._sharedNavigationService.data.subscribe(\r\n            value => void (0),\r\n            error => void (0),\r\n            () => {\r\n                this.item = this._sharedNavigationService.getItem(parseInt(this.route.snapshot.params['navId'], 10));\r\n            }\r\n        );\r\n\r\n    }\r\n}"],"sourceRoot":"/source/"}