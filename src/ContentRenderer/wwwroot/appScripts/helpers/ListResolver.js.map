{"version":3,"sources":["helpers/ListResolver.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAMA;gBAEI,YAAoB,WAAuB,EAAU,MAAc;oBAA/C,gBAAW,GAAX,WAAW,CAAY;oBAAU,WAAM,GAAN,MAAM,CAAQ;gBAEnE,CAAC;gBAED,OAAO,CAAC,KAA6B;oBACjC,MAAM,IAAI,GAAW,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBAC3C,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAyB;wBACrE,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;4BACT,MAAM,CAAC,MAAM,CAAC;wBAClB,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,2CAA2C;4BAC3C,MAAM,CAAC,EAAE,CAAC;wBACd,CAAC;oBACL,CAAC,CAAC,CAAC;gBACP,CAAC;YACL,CAAC;YAlBD;gBAAC,iBAAU,EAAE;;4BAAA;YACb,uCAiBC,CAAA","file":"helpers/ListResolver.js","sourcesContent":["import {WebService} from '../services/webService';\r\nimport { Router, ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport {Injectable} from '@angular/core';\r\nimport {GridConfiguration} from '../models/gridConfiguration';\r\n\r\n@Injectable()\r\nexport class ListResolver implements Resolve<any> {\r\n    data: any;\r\n    constructor(private _webService: WebService, private router: Router) {\r\n\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Promise<any> | any {\r\n        const type: number = +route.params['type'];\r\n        return this._webService.getGridItem(type).then((result: GridConfiguration) => {\r\n            if (result) {\r\n                return result;\r\n            } else {\r\n                //this.router.navigate(['/crisis-center']);\r\n                return [];\r\n            }\r\n        });\r\n    }\r\n}"],"sourceRoot":"/source/"}